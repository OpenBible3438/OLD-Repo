<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.androidMapper">

<!-- ======================= 편성경 ======================= -->
	<!-- 회원 로그인 -->
	<select id="getMemberLogin" parameterType="map" resultType="map">
		SELECT mem_name, mem_nickname, mem_no
		  FROM MEMBER
		 WHERE mem_id = #{mem_id}
		   AND mem_pw = #{mem_pw}
	</select>
	<!-- 회원 번호 채번 -->
	<select id="memberJoinGetNo" parameterType="map" resultType="int">
		SELECT func_memGenNo(#{mem_gender}) as "mem_no" 
		  FROM dual
	</select>
	<!-- 회원 정보 insert -->
	<insert id="memberJoinInfo" parameterType="map">
		INSERT INTO 
			    member(MEM_NO        
			          ,MEM_ID       
			          ,MEM_PW       
			          ,MEM_NAME     
			          ,MEM_NICKNAME 
			          ,MEM_TEL      
			          ,MEM_ADDR     
			          ,MEM_ADDR_DTL 
			          ,MEM_ZIPCODE  
			          ,MEM_GENDER   
			          ,MEM_JOINDATE 
			          ,MEM_BIRTH)
			    VALUES(#{mem_no}
			          ,#{mem_id}
			          ,#{mem_pw}
			          ,#{mem_name}
			          ,#{mem_nickname}
			          ,#{mem_tel}
			          ,#{mem_addr}
			          ,#{mem_addr_dtl}
			          ,#{mem_zipcode}
			          ,#{mem_gender}
			          ,(SELECT to_char(sysdate, 'yyyy-mm-dd') FROM dual)
			          ,#{mem_birth} 
			           )    
	</insert>
	<!-- 회원 이미지 insert -->
	<insert id="memberJoinImg" parameterType="map">
		INSERT INTO images(file_seq
		                  ,filename     ,filesize
		                  ,filedata
		                  ,type         ,typecode)
		            VALUES(seq_images.nextval
		                  ,#{filename}  ,#{filesize}
		                  ,#{filedata, jdbcType=LONGVARBINARY} 
		                  ,'mem'        ,#{mem_no}) 
	</insert>
<!-- ======================= 김혜림 ======================= -->
	<!-- 강사별 수업 목록 가져오기(수강생 수 포함) -->
	<select id="getTchClassList_and" parameterType="map" resultType="map">
		SELECT c.cls_no, c.cls_name, c.cls_info, c.cls_kind, c.cls_cnt, c.cls_days, c.cls_day, cls_s_date
			 , cls_e_date, c.cls_state, COUNT(p.pay_no)regis_num, COUNT(DISTINCT(p.mem_no)) mem_num
		  FROM class c, pay p
		 WHERE c.cls_no = p.cls_no
		   AND tch_no = #{tch_no}
	  GROUP BY c.cls_no, c.cls_name, c.cls_info, c.cls_kind, c.cls_cnt, c.cls_days, c.cls_day, cls_s_date, cls_e_date, c.cls_state
	</select>
	<select id="getclsMemList_and" parameterType="map" resultType="map">
	SELECT m.mem_no, m.mem_name, m.mem_birth, DECODE(MIN(ma.mem_cls_cnt), -1, '해당없음',MIN(ma.mem_cls_cnt)) rcnt, c.cls_cnt cnt
	  FROM class c, pay p, mem_attend ma, member m
	 WHERE c.cls_no = p.cls_no
	   AND p.mem_no = m.mem_no
	   AND p.cls_no = #{cls_no}
	GROUP BY m.mem_no, m.mem_name, m.mem_birth, c.cls_cnt
	</select>
	<!-- 회원 paylist 구하기 -->
	<select id="getMemPayList_and" parameterType="map" resultType="map">
	SELECT g.gym_name, c.cls_name, t.tch_name, c.cls_price, p.pay_date
	  FROM gym g, class c, teacher t, pay p
	 WHERE g.gym_no = c.gym_no
	   AND c.cls_no = p.cls_no
	   AND t.tch_no = c.tch_no
	   AND g.gym_no = t.gym_no
	   AND mem_no = #{mem_no}
	</select>
	<!-- map에 사용 될 매장 리스트 구하기 -->
	<select id="getGymList_and" parameterType="map" resultType="map">
	SELECT gym_name, gym_lat, gym_lng, gym_addr||' '||gym_addr_dtl gym_addr
	  FROM gym
	 WHERE gym_name IS NOT NULL
	   AND gym_lat IS NOT NULL
	   AND gym_lng IS NOT NULL
	   AND gym_addr IS NOT NULL
	   AND gym_addr_dtl IS NOT NULL
	</select>
<!-- ======================= 김승현 ======================= -->


<!-- ======================= 박준규 ======================= -->


<!-- ======================= 김현빈 ======================= -->


<!-- ======================= 허준호 ======================= -->
<!-- 매장기준  콘텐츠 가져오기 -->
	<select id="getGymContentsList" parameterType="map" resultType="map">
		SELECT G.GYM_NAME
		      ,C.GYM_CONT_SEQ
		      ,C.GYM_CONT_DATE
		      ,C.GYM_CONT_TIME
		      ,C.GYM_CONTENTS
		      ,C.GYM_CONT_LIKE
		      ,I.FILEDATA
		  FROM gym g, images i, gym_contents c
		 WHERE G.GYM_NO = C.GYM_NO
		   AND I.TYPECODE = C.GYM_CONT_SEQ
		   AND I.TYPE = 'gymCont'
		   AND G.GYM_NO = #{gym_no}
	</select>
<!-- 매장기준  강사 가져오기 -->	
	<select id="getGymTeacherList" parameterType="map" resultType="map">
		SELECT T.TCH_NAME
		      ,T.TCH_GENDER
		      ,TI.TCH_INTRO
		      ,TI.TCH_CAREER
		      ,TI.TCH_LIKE
		      ,I.FILEDATA
		  FROM teacher t, images i, tch_info ti
		 WHERE T.TCH_NO = TI.TCH_NO(+)
		   AND T.GYM_NO = TI.GYM_NO(+)
		   AND I.TYPE = 'tch'
		   AND I.TYPECODE = T.GYM_NO||T.TCH_NO
		   AND T.GYM_NO = #{gym_no}
	</select>
<!-- 매장기준  수업 가져오기 -->	
	<select id="getGymClassList" parameterType="map" resultType="map">
		SELECT C.CLS_NO
		      ,C.CLS_NAME
		      ,C.CLS_INFO
		      ,C.TYPE_NO
		      ,C.CLS_STATE
		      ,C.CLS_DAYS
		      ,C.CLS_DAY
		  FROM teacher t, gym g, class c
		 WHERE T.GYM_NO = G.GYM_NO
		   AND T.TCH_NO = C.TCH_NO
		   AND C.CLS_STATE = '진행'
		   AND G.GYM_NO = #{gym_no}
	</select>
<!-- 매장기준  후기 가져오기 -->	
	<select id="getGymReviewList" parameterType="map" resultType="map">
		SELECT GYM.GYM_NAME
		      ,GYM.GYM_NO
		      ,T.TCH_NAME
		      ,T.TCH_NO
		      ,C.CLS_NAME
		      ,C.CLS_NO
		      ,R.REV_SEQ
		      ,R.REV_CONT
		      ,R.REV_STAR
		      ,R.REV_UP
		      ,R.REV_DOWN
		      ,R.REV_DATE
		      ,R.REV_TIME
		      ,R.REV_KIND
		  FROM review r, gym, pay p, class c, teacher t
		 WHERE R.PAY_NO = P.PAY_NO
		   AND P.CLS_NO = C.CLS_NO
		   AND C.TCH_NO = T.TCH_NO
		   AND T.GYM_NO = GYM.GYM_NO
		   AND GYM.GYM_NO = #{gym_no}
	</select>
	
</mapper>