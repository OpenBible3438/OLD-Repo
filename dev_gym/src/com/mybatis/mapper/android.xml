<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.androidMapper">

<!-- ======================= 편성경 ======================= -->
	<!-- 회원 로그인 -->
	<select id="getMemberLogin" parameterType="map" resultType="map">
		SELECT mem_name, mem_nickname
		  FROM MEMBER
		 WHERE mem_id = #{mem_id}
		   AND mem_pw = #{mem_pw}
	</select>
	<!-- 회원 번호 채번 -->
	<select id="memberJoinGetNo" parameterType="map" resultType="int">
		SELECT func_memGenNo(#{mem_gender}) as "mem_no" 
		  FROM dual
	</select>
	<!-- 회원 정보 insert -->
	<insert id="memberJoinInfo" parameterType="map">
		INSERT INTO 
			    member(MEM_NO        
			          ,MEM_ID       
			          ,MEM_PW       
			          ,MEM_NAME     
			          ,MEM_NICKNAME 
			          ,MEM_TEL      
			          ,MEM_ADDR     
			          ,MEM_ADDR_DTL 
			          ,MEM_ZIPCODE  
			          ,MEM_GENDER   
			          ,MEM_JOINDATE 
			          ,MEM_BIRTH)
			    VALUES(#{mem_no}
			          ,#{mem_id}
			          ,#{mem_pw}
			          ,#{mem_name}
			          ,#{mem_nickname}
			          ,#{mem_tel}
			          ,#{mem_addr}
			          ,#{mem_addr_dtl}
			          ,#{mem_zipcode}
			          ,#{mem_gender}
			          ,(SELECT to_char(sysdate, 'yyyy-mm-dd') FROM dual)
			          ,#{mem_birth} 
			           )    
	</insert>
	<!-- 회원 이미지 insert -->
	<insert id="memberJoinImg" parameterType="map">
		INSERT INTO images(file_seq
		                  ,filename     ,filesize
		                  ,filedata
		                  ,type         ,typecode)
		            VALUES(seq_images.nextval
		                  ,#{filename}  ,#{filesize}
		                  ,#{filedata, jdbcType=LONGVARBINARY} 
		                  ,'mem'        ,#{mem_no}) 
	</insert>
<!-- ======================= 김혜림 ======================= -->
	<!-- 강사별 수업 목록 가져오기(수강생 수 포함) -->
	<select id="getTchClassList_and" parameterType="map" resultType="map">
		SELECT c.cls_no, c.cls_name, c.cls_info, c.cls_kind, c.cls_cnt, c.cls_days, c.cls_day, cls_s_date
			 , cls_e_date, c.cls_state, COUNT(p.pay_no)regis_num, COUNT(DISTINCT(p.mem_no)) mem_num
		  FROM class c, pay p
		 WHERE c.cls_no = p.cls_no
		   AND tch_no = #{tch_no}
	  GROUP BY c.cls_no, c.cls_name, c.cls_info, c.cls_kind, c.cls_cnt, c.cls_days, c.cls_day, cls_s_date, cls_e_date, c.cls_state
	</select>
	<select id="getclsMemList_and" parameterType="map" resultType="map">
	SELECT m.mem_no, m.mem_name, m.mem_birth, DECODE(MIN(ma.mem_cls_cnt), -1, '해당없음',MIN(ma.mem_cls_cnt)) rcnt, c.cls_cnt cnt
	  FROM class c, pay p, mem_attend ma, member m
	 WHERE c.cls_no = p.cls_no
	   AND p.mem_no = m.mem_no
	   AND p.cls_no = #{cls_no}
	GROUP BY m.mem_no, m.mem_name, m.mem_birth, c.cls_cnt
	</select>
<!-- ======================= 김승현 ======================= -->


<!-- ======================= 박준규 ======================= -->


<!-- ======================= 김현빈 ======================= -->


<!-- ======================= 허준호 ======================= -->

	
</mapper>