<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orm.mybatis.mapper.gymMapper">

	<resultMap id="gymLogin" type="map"/>
	<resultMap id="getImage" type="object">
		<result property="filedata" column="FILEDATA" jdbcType="BLOB"/>
	</resultMap>
	<resultMap id="getCont" type="map">
		<result property="filedata" column="FILEDATA" jdbcType="BLOB"/>
		<result property="filesize" column="FILESIZE" jdbcType="DOUBLE"/>
	</resultMap>
<!-- ======================= GYM ======================= -->
	<select id="getClassList" parameterType="map" resultType="map">
	SELECT rownum, cls.cls_no, cls.cls_name, cls.cls_kind, cls.cls_cnt, cls.cls_days, cls.cls_s_date, cls.cls_e_date, cls.cls_price, cls.cls_state, tch.tch_name
	  FROM class  cls, teacher tch 
	 WHERE cls.tch_no = tch.tch_no
	
	</select>
	<select id="getClassDetail" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getClassMemList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getNoticeList" parameterType="map" resultType="map">
		SELECT not_seq, not_title, not_cont, gym_no
		  FROM notice
		<where>
			<if test="gym_no!=null and gym_no.length>0">
				AND gym_no = #{gym_no}
			</if>
			<if test="not_title!=null and not_title.length>0">
				AND not_title = #{not_title}
			</if>
			<if test="not_cont!=null and not_cont.length>0">
				AND not_cont = #{not_cont}
			</if>
		</where>
		 ORDER BY gym_no
	</select>
	<select id="getChartList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getContentList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getInfoList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getReviewList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<!-- 매장 로그인  -->
	<select id="getLogin" parameterType="map" resultType="map">
		SELECT gym_no, gym_name
		  FROM gym
		 WHERE rownum = 1
		   AND gym_id = #{gym_id}
		   AND gym_pw = #{gym_pw}
	</select>
	<!-- 매장 로그인  프로시저 -->
	<select id="getProcLogin"  parameterType="map" statementType="CALLABLE">
		{ call proc_gym_login(#{gym_id},#{gym_pw},#{gymLogin
						                           ,jdbcType=CURSOR
						                           ,mode=OUT
						                           ,javaType=java.sql.ResultSet
						                           ,resultMap=gymLogin})}
	</select>
	<!-- 매장 아이디 중복확인  -->
	<select id="getIdConfirm" parameterType="map" resultType="int">
		SELECT nvl((
	               SELECT count(gym_id)
	                 FROM gym
	                WHERE rownum=1
	                  AND gym_id = #{gym_id} ),0) as ok
	  	  FROM dual
	</select>
	<!-- 매장 프로필 사진 가져오기  -->
	<select id="gymProfImage" parameterType="map" resultMap="getImage">
		SELECT filedata  
		  FROM images
		 WHERE type = 'gym'
		   AND typecode = 5 
	</select><!-- #{gym_no} -->
	
	<!-- 매장 콘텐츠 정보 가져오기  -->
	<select id="gymContImage" parameterType="map" resultMap="getCont">
		SELECT filename, filesize, filedata
		  FROM images
		 WHERE type = 'gym'
		   AND typecode = 6 
	</select><!-- #{gym_no} -->
	
	<!-- 이미지 가져오기  -->
	<select id="getImages" parameterType="map" resultMap="getImage">
		SELECT filedata
		  FROM images
		 WHERE file_seq = #{file_seq}
	</select><!-- #{file_seq} -->
	
	<!-- 매장 회원가입 인서트 -->
	<insert id="gymJoin" parameterType="map">
		INSERT INTO gym (gym_no 
		                ,gym_id ,gym_pw ,gym_username ,gym_usertell
                        ,gym_name ,gym_tel     ,gym_addr   ,gym_addr_dtl ,gym_zipcode
                        ,gym_number ,gym_info    ,gym_lat    ,gym_lng      
                        ,gym_parking ,gym_wash   ,gym_uniform ,gym_locker ,gym_like )
                  VALUES((SELECT max(gym_no)+1 FROM gym)
                        ,#{j_gym_id} ,#{j_gym_pw} ,#{gym_username} ,#{gym_usertell} 
                        ,#{gym_name}   ,#{gym_tel} ,#{gym_addr} ,#{gym_addr_dtl} ,#{gym_zipcode}
                        ,#{gym_number} ,#{gym_info} ,34.1515115151 ,127.5486446215
                        ,#{gym_parking}  ,#{gym_wash}  ,#{gym_uniform}  ,#{gym_locker}  ,0 )
	</insert>
	<!-- 매장 회원가입 프로필사진 인서트 --><!-- (SELECT max(file_seq)+1 FROM images) -->
	<insert id="gymJoinImg" parameterType="map">
		INSERT INTO images(file_seq
		                  ,filename  ,filesize
		                  ,filedata
		                  ,type ,typecode)
                    VALUES((SELECT max(file_seq)+1 FROM images)
                          ,#{filename}  ,#{filesize}
                          ,#{filedata   ,jdbcType=LONGVARBINARY} 
                          ,#{type}      ,6 )
	</insert>
	<insert id="classIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="classMemIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="gymNoticeIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="chartIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="contentIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	
	<update id="classUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="classMemUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="gymNoticeUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="chartUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="contentUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="gymInfoUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	
	<delete id="classDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="classMemDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="gymNoticeDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="chartDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="contentDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	
</mapper>